// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(mesajcontext))]
    [Migration("20210407100727_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication2.Models.beneficii", b =>
                {
                    b.Property<int>("beneficiiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("allinclusive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("piscina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rezervareId")
                        .HasColumnType("int");

                    b.HasKey("beneficiiId");

                    b.HasIndex("rezervareId");

                    b.ToTable("beneficiis");
                });

            modelBuilder.Entity("WebApplication2.Models.cariera", b =>
                {
                    b.Property<int>("carieraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("calitati")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hotelId")
                        .HasColumnType("int");

                    b.Property<string>("nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rezervareId")
                        .HasColumnType("int");

                    b.HasKey("carieraId");

                    b.HasIndex("hotelId");

                    b.HasIndex("rezervareId");

                    b.ToTable("cariera");
                });

            modelBuilder.Entity("WebApplication2.Models.hotel", b =>
                {
                    b.Property<int>("hotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("locatia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hotelId");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("WebApplication2.Models.job", b =>
                {
                    b.Property<string>("jobId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("carieraId")
                        .HasColumnType("int");

                    b.Property<string>("experienta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numejob")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("jobId");

                    b.HasIndex("carieraId");

                    b.ToTable("joburi");
                });

            modelBuilder.Entity("WebApplication2.Models.mesaj", b =>
                {
                    b.Property<int>("mesajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hotelId")
                        .HasColumnType("int");

                    b.Property<string>("nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mesajId");

                    b.HasIndex("hotelId");

                    b.ToTable("mesaje");
                });

            modelBuilder.Entity("WebApplication2.Models.rezervare", b =>
                {
                    b.Property<int>("rezervareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("adulti")
                        .HasColumnType("int");

                    b.Property<int>("copii")
                        .HasColumnType("int");

                    b.Property<int>("hotelId")
                        .HasColumnType("int");

                    b.Property<string>("nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rezervareId");

                    b.HasIndex("hotelId");

                    b.ToTable("rezervari");
                });

            modelBuilder.Entity("WebApplication2.Models.beneficii", b =>
                {
                    b.HasOne("WebApplication2.Models.rezervare", "rezervare")
                        .WithMany()
                        .HasForeignKey("rezervareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.cariera", b =>
                {
                    b.HasOne("WebApplication2.Models.hotel", "hotel")
                        .WithMany("joburi")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.rezervare", null)
                        .WithMany("joburi")
                        .HasForeignKey("rezervareId");
                });

            modelBuilder.Entity("WebApplication2.Models.job", b =>
                {
                    b.HasOne("WebApplication2.Models.cariera", "cariera")
                        .WithMany("joburi")
                        .HasForeignKey("carieraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.mesaj", b =>
                {
                    b.HasOne("WebApplication2.Models.hotel", "hotel")
                        .WithMany("mesaje")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.rezervare", b =>
                {
                    b.HasOne("WebApplication2.Models.hotel", "hotel")
                        .WithMany("rezervari")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
